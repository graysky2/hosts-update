#!/bin/bash

# /usr/bin/hosts-update version @VERSION@
#
# Originally by Wintervenom | https://bbs.archlinux.org/viewtopic.php?id=106367
# Modified by graysky with eye candy and strucutre.
# Modified by Jonathan Poltak Samosir <jonathan.samosir@gmail.com> for use with vanilla OS X 10.9.

# select portions from /etc/rc.d/functions and /usr/bin/makepkg to make stuff pretty
# leave echo backslash escapes as unset on OS X, as vanilla OS X's echo does not support them
if [[ "$(uname)" != "Darwin" ]]; then
  ALL_OFF="\e[1;0m"
  BOLD="\e[1;1m"
  BLUE="${BOLD}\e[1;34m"
  GREEN="${BOLD}\e[1;32m"
  RED="${BOLD}\e[1;31m"
  YELLOW="${BOLD}\e[1;33m"
fi

# width:
calc_columns () {
	STAT_COL=80
	if [[ ! -t 1 ]]; then
		USECOLOR=""
	elif [[ -t 0 ]]; then
		# stty will fail when stdin isn't a terminal
		STAT_COL=$(stty size)
		# stty gives "rows cols"; strip the rows number, we just want columns
		STAT_COL=${STAT_COL##* }
	elif tput cols &>/dev/null; then
		# is /usr/share/terminfo already mounted, and TERM recognized?
		STAT_COL=$(tput cols)
	fi
	if (( STAT_COL == 0 )); then
		# if output was 0 (serial console), set default width to 80
		STAT_COL=80
		USECOLOR=""
	fi

	# we use 13 characters for our own stuff
	STAT_COL=$(( STAT_COL - 13 ))

	if [[ -t 1 ]]; then
		SAVE_POSITION="\e[s"
		RESTORE_POSITION="\e[u"
		DEL_TEXT="\e[$(( STAT_COL + 4 ))G"
	else
		SAVE_POSITION=""
		RESTORE_POSITION=""
		DEL_TEXT=""
	fi
}

calc_columns

# functions:
deltext() {
	printf "${DEL_TEXT}"
}

stat_busy() {
	printf "${C_OTHER}${PREFIX_REG} ${C_MAIN}${1}${C_CLEAR} "
	printf "${SAVE_POSITION}"
	deltext
	printf "   ${C_OTHER}[${C_BUSY}BUSY${C_OTHER}]${C_CLEAR} "
}

stat_done() {
	deltext
	printf "   ${C_OTHER}[${C_DONE}DONE${C_OTHER}]${C_CLEAR} \n"
}

stat_fail() {
	deltext
	printf "   ${C_OTHER}[${C_FAIL}FAIL${C_OTHER}]${C_CLEAR} \n"
}

stat_die() {
	stat_fail
	exit ${1:-1}
}

msg() {
	local mesg=$1; shift
	printf "${RED}===>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
}

# set colors
if tput setaf 0 &>/dev/null; then
	C_CLEAR=$(tput sgr0)                      # clear text
	C_MAIN=${C_CLEAR}$(tput bold)        # main text
	C_OTHER=${C_MAIN}$(tput setaf 4)     # prefix & brackets
	C_SEPARATOR=${C_MAIN}$(tput setaf 0) # separator
	C_BUSY=${C_CLEAR}$(tput setaf 6)     # busy
	C_FAIL=${C_MAIN}$(tput setaf 1)      # failed
	C_DONE=${C_MAIN}                          # completed
	C_BKGD=${C_MAIN}$(tput setaf 5)      # backgrounded
	C_H1=${C_MAIN}                            # highlight text 1
	C_H2=${C_MAIN}$(tput setaf 6)        # highlight text 2
else
	C_CLEAR="\e[m"          # clear text
	C_MAIN="\e[;1m"         # main text
	C_OTHER="\e[1;34m"      # prefix & brackets
	C_SEPARATOR="\e[1;30m"  # separator
	C_BUSY="\e[;36m"        # busy
	C_FAIL="\e[1;31m"       # failed
	C_DONE=${C_MAIN}        # completed
	C_BKGD="\e[1;35m"       # backgrounded
	C_H1=${C_MAIN}          # highlight text 1
	C_H2="\e[1;36m"         # highlight text 2
fi

# prefixes:
PREFIX_REG="::"
PREFIX_HL=" >"

process() {
	# Replace every IP address with 0.0.0.0.
	sed -E 's:^([0-9]{1,3}\.){3}[0-9]{1,3}:0.0.0.0:' /tmp/hosts.txt > /tmp/hosts.zeros.txt
	# TODO: fix this, maybe change to head. Currently gets the first n-x lines where x is the number of lines gotten from the sub-command.
	tail -n+$(grep -nF 'Start of entries' /tmp/hosts.zeros.txt | cut -d':' -f1) /tmp/hosts.zeros.txt > /tmp/hosts.processed.txt
	# Write this new list over the system hosts list.  MVPS' line feeds
	# are \n\r; we will be getting rid of those dirty carriage returns.
	# We'll first write the user's hosts head, then the black list.

	cat /etc/hosts.local > /etc/hosts
	cat /tmp/hosts.processed.txt | tr -d "\r" >> /etc/hosts
	rm /tmp/hosts*.txt
}

if [[ $EUID -ne 0 ]]; then
	echo -e ${BOLD}"This script must be called as root!"${ALL_OFF}
	exit 1
fi

if [[ ! -f /etc/hosts.local ]]; then
	echo -e ${BOLD}"/etc/hosts.local missing; reinstall this package."${ALL_OFF}
	exit 1
fi

echo > /tmp/hosts.txt

hostslist=(
    'http://www.malwaredomainlist.com/hostslist/hosts.txt'
    'http://winhelp2002.mvps.org/hosts.txt'
    'http://someonewhocares.org/hosts/zero/hosts'
    'http://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext&useip=0.0.0.0'
    'http://hosts-file.net/.ad_servers.txt'
    'https://adaway.org/hosts.txt'
)

for host in ${hostslist[*]}
do
    domain=$(echo ${host} | awk -F/ '{print $3}')
    stat_busy "Getting bad actors list from ${domain}"
    curl -C - -s $host >> /tmp/hosts.txt
    [[ $? -gt 0 ]] && stat_die || stat_done
done

stat_busy "Merging and writing /etc/hosts"
process
[[ $? -gt 0 ]] && stat_die || stat_done
